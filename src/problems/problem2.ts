// <p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:
// $$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>
// <p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>

export function calculateEvenFibonacciNumbers(): void {
  const generateArray = (limit: number): number[] => {
    const array: number[] = [1, 2];

    while (array[array.length - 1] < limit) {
      const nextValue = array[array.length - 1] + array[array.length - 2];

      array.push(nextValue);
    }

    if (array[array.length - 1] > limit) {
      array.pop();
    }

    return array;
  };

  const evenFibonacciNumbers = (limit: number): number => {
    return generateArray(limit)
      .filter((x) => x % 2 === 0) // Create an array [0, 1, 2, ..., limit-1]
      .reduce((acc, curr) => acc + curr, 0); // Sum all the filtered numbers
  };

  const result: number = evenFibonacciNumbers(4000000);

  console.debug(`Problem 2 - Even Fibonacci Numbers - answer: ${result}`);
}

calculateEvenFibonacciNumbers();
